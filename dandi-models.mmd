flowchart TD
    dandi_json["<a href='https://github.com/dandi/schema'>dandi/schema</a><br/>(JSON Schema models)
               for each model release"]@{ shape: docs }
    dandi_cli["<a href='https://github.com/dandi/dandi-cli'>dandi-cli</a><br/>Python client library and CLI"]

    subgraph "<a href=''>dandi/dandischema</a>"
        %% nodes
        dandi_pydantic["<a href='https://github.com/dandi/dandi-schema/blob/master/dandischema/models.py'>dandi/dandischema::models.py</a><br/>(Pydantic models)"]
        dandi_validate["<a href='https://github.com/dandi/dandi-schema/blob/c3007768e002c9f51ea37b5e6b3628f7f7f20943/dandischema/metadata.py#L195'>dandi/dandischema::validate()</a><br/>(Validation helper)"]
        dandi_json_runtime[Latest JSON Schema models]@{ shape: doc }

        %% edges
        dandi_pydantic -->|Used for generating| dandi_json_runtime --> dandi_validate
    end

    subgraph "<a href=''>dandi/dandi-archive</a>"
        dandi_archive_db[(PostgresDB)]
        dandi_archive_backend["<a href='https://api.dandiarchive.org'>api.dandiarchive.org</a><br/>Backend/API"]
        dandi_archive_frontend["<a href='https://www.dandiarchive.org'>www.dandiarchive.org</a><br/>Frontend/Web UI"]
        %% user_input_data["User input data"]@{ shape: manual-input }
        meditor[[vjsf-based<br/>Web UI meditor]]
        meditor_input["User input through meditor"]@{ shape: manual-input }

        dandi_archive_validate[/Celery task to validate<br/>dandiset and assets metadata/]
    end

    dandi_pydantic -->|<a href="https://github.com/dandi/dandi-schema/blob/master/.github/workflows/release.yml">GitHub CI</a>:
                       Generates JSON schemas per model release| dandi_json

    %% dandi/dandischema does use JSON schema models during validation

    dandi_pydantic -->|Used by| dandi_cli
    dandi_pydantic -->|Used by| dandi_validate
    dandi_json -->|Used for other versions| dandi_validate

    dandi_archive_backend --> |Schedule| dandi_archive_validate
    dandi_archive_backend <--->  dandi_archive_db
    dandi_validate -->|Used by| dandi_archive_validate
    %%?? dandi_validate -->|Used by| dandi_cli

    %% dandi_json -->|Used by| dandi_archive_backend
    dandi_json -->|Used by| dandi_archive_frontend


    %% datasets[NWB/BIDS]
    %% user_input_data --> |Expressed as| datasets
    %%  datasets --> |Extracts metadata by| dandi_cli
    dandi_cli --> |Extracts and uploads<br/>metadata for assets| dandi_archive_backend
    %% We always upload Asset pyndatic model, but it might be minimally
    %% populated if there was an error while extracting metadata

    dandi_archive_frontend --> |Generates Meditor| meditor
    meditor_input --> | Restricted by| meditor
    meditor --> |Stored| dandi_archive_backend

    dandi_archive_validate --> |Record validation status| dandi_archive_db
